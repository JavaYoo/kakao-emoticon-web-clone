/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-06-17 02:56:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.days04;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Set;
import days04.DeptEmpSalgradeDTO;
import java.util.ArrayList;
import days04.SalgradeDTO;
import java.util.LinkedHashMap;

public final class ex02_005fok_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.LinkedHashMap");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("java.util.Map.Entry");
    _jspx_imports_classes.add("days04.DeptEmpSalgradeDTO");
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("days04.SalgradeDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>2022. 6. 17. - 오전 11:39:26</title>\r\n");
      out.write("<link rel=\"shortcut icon \"type = \"image/x-icon\" href = \"../images/SiSt.ico\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resources/demos/style.css\">\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("  <script src=\"https://code.jquery.com/ui/1.13.1/jquery-ui.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("  $( function() {\r\n");
      out.write("    $( \"#accordion\" ).accordion();\r\n");
      out.write("  } );\r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	LinkedHashMap<SalgradeDTO, ArrayList<DeptEmpSalgradeDTO>> map = 
			(LinkedHashMap<SalgradeDTO, ArrayList<DeptEmpSalgradeDTO>> )request.getAttribute("map");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h3>ex02_ok.jsp</h3>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"accordion\">\r\n");

	Set<Entry<SalgradeDTO, ArrayList<DeptEmpSalgradeDTO>>> set = map.entrySet();
	Iterator<Entry<SalgradeDTO, ArrayList<DeptEmpSalgradeDTO>>> ir = set.iterator();
	
	while (ir.hasNext()) {
        Entry<SalgradeDTO, ArrayList<DeptEmpSalgradeDTO>> entry =    ir.next();
        SalgradeDTO dto = entry.getKey();
        

      out.write("\r\n");
      out.write("	<h3>");
      out.print( String.format("%d 등급 ( %d ~ %d ) - %d 명", dto.getGrade(), dto.getLosal(), dto.getHisal(), dto.getCnt()) );
      out.write("</h3>\r\n");

        // 
        ArrayList<DeptEmpSalgradeDTO>  list = entry.getValue();
        // 20   RESEARCH   7369   SMITH   800.00
        Iterator<DeptEmpSalgradeDTO>  vir = list.iterator();
        

      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div>\r\n");
      out.write("		<p>\r\n");

        while (vir.hasNext()) {
           DeptEmpSalgradeDTO edto =  vir.next();
           

      out.write("\r\n");
      out.write("	<li>\r\n");
      out.print(
           String.format("\t\t%d\t%s\t%d\t%s\t%.2f\n"
                 , edto.getDeptno(), edto.getDname(), edto.getEmpno(), edto.getEname(), edto.getSal() )

);
      out.write("\r\n");
      out.write("	</li>\r\n");

        } // while

      out.write("\r\n");
      out.write("		</p>\r\n");
      out.write("	</div>\r\n");
 
     } // while
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("  <h3>Section 1</h3>\r\n");
      out.write("  <div>\r\n");
      out.write("    <p>\r\n");
      out.write("    Mauris mauris ante, blandit et, ultrices a, suscipit eget, quam. Integer\r\n");
      out.write("    ut neque. Vivamus nisi metus, molestie vel, gravida in, condimentum sit\r\n");
      out.write("    amet, nunc. Nam a nibh. Donec suscipit eros. Nam mi. Proin viverra leo ut\r\n");
      out.write("    odio. Curabitur malesuada. Vestibulum a velit eu ante scelerisque vulputate.\r\n");
      out.write("    </p>\r\n");
      out.write("  </div>\r\n");
      out.write("-->  \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
