/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-06-15 03:32:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.days02;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex03_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	// 스크립트릿
	String contextPath = request.getContextPath();
	//> 컨텍스트 패스 : /jspPro
	System.out.printf("> 컨텍스트 패스 : %s\n",contextPath );

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>2022. 6. 15. - 오전 11:27:19</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resources/demos/style.css\">\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("  <script src=\"https://code.jquery.com/ui/1.13.1/jquery-ui.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("  $( function() {\r\n");
      out.write("    $( \"#tabs\" ).tabs();\r\n");
      out.write("  } );\r\n");
      out.write("  </script>\r\n");
      out.write("  \r\n");
      out.write("  <div id=\"tabs\">\r\n");
      out.write("  <ul>\r\n");
      out.write("    <li><a href=\"#tabs-1\">GET 방식 요청</a></li>\r\n");
      out.write("    <li><a href=\"#tabs-2\">POST 방식 요청</a></li>\r\n");
      out.write("  </ul>\r\n");
      out.write("  <div id=\"tabs-1\">\r\n");
      out.write("    <p>\r\n");
      out.write("		정수 입력 : <input type=\"text\" name=\"n\" id=\"n\" >\r\n");
      out.write("		<br>\r\n");
      out.write("		<!-- a 링크 태그로 요청하면 : get 방식 요청 -->\r\n");
      out.write("		<a href=\"");
      out.print(contextPath );
      out.write("/days02/ex03_ok.jsp\">ex03_ok.jsp</a>\r\n");
      out.write("	</p>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div id=\"tabs-2\">\r\n");
      out.write("    <p>\r\n");
      out.write("    	<!-- <form method=\"get\" action=\"\"> -->\r\n");
      out.write("    	<form >\r\n");
      out.write("    	Name : <input type=\"text\" name=\"name\" id=\"name\" autofocus=\"autofocus\"><br>\r\n");
      out.write("    	Age : <input type=\"text\" name=\"age\" id=\"age\" ><br>\r\n");
      out.write("    	<input type=\"radio\" name=\"method\" value=\"get\" checked=\"checked\"> GET 요청\r\n");
      out.write("    	<input type=\"radio\" name=\"method\" value=\"post\"> POST 요청\r\n");
      out.write("    	<br>\r\n");
      out.write("    	<button type=\"button\">전송(submit)</button>\r\n");
      out.write("    	</form>\r\n");
      out.write("    	<!-- a 링크 태그로 요청하면 : get 방식 요청 -->\r\n");
      out.write("    	<a href=\"");
      out.print(contextPath );
      out.write("/info\">/info</a>\r\n");
      out.write("    	<!-- 서블릿 생성 @WebServlet 어노테이션 + 자동 서블릿 등록 -->\r\n");
      out.write("    	<!-- p498 ~ p515 정독 -->\r\n");
      out.write("    	<!-- p80 ~ p88 -->\r\n");
      out.write("    </p>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	$(\"form button\").on(\"click\", function(){\r\n");
      out.write("		$(\"form\")\r\n");
      out.write("			.attr(\"action\", \"");
      out.print(contextPath);
      out.write("/days02/info.htm\")\r\n");
      out.write("			.attr(\"method\",$(\"#tabs-2 :radio:checked\").val() )\r\n");
      out.write("			.submit();\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	// 							webapp 폴더\r\n");
      out.write("	// http://localhost/jspPro	context root == context path\r\n");
      out.write("	// 									/days02/ex03_ok.jsp?n=11\r\n");
      out.write("	$(\"#tabs-1 a\").on(\"click\",function(){\r\n");
      out.write("		//alert(\"test\");\r\n");
      out.write("		//event.prevnetDefault();\r\n");
      out.write("		\r\n");
      out.write("		// /jspPro/days02/ex03_ok.jsp?n=10\r\n");
      out.write("		//alert($(this).attr(\"href\"))\r\n");
      out.write("		/* \r\n");
      out.write("		var href = $(this).attr(\"href\");\r\n");
      out.write("		$(this).attr(\"href\",href + \"?=\"+$(\"#n\").val())\r\n");
      out.write("		*/\r\n");
      out.write("		\r\n");
      out.write("		$(this).attr(\"href\",function(i,val){\r\n");
      out.write("			return val + \"?n=\" + $(\"#n\").val();\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("	})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
