/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-06-16 02:44:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.days03;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex06_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>hwan/2022/06/16-10:35 AM</title>\r\n");
      out.write("    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"../images/SiSt.ico\">\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<h3>ex06</h3>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<pre>\r\n");
      out.write("	MVC 패턴\r\n");
      out.write("	M 로직 처리\r\n");
      out.write("	V 화면 출력\r\n");
      out.write("	C 컨트롤\r\n");
      out.write("    1. a 링크 태그 선언\r\n");
      out.write("    2. 서블릿 생성 - GET 방식 요청 / doGet() 오버라이딩\r\n");
      out.write("    	days03.ScottDept\r\n");
      out.write("    	서블릿 등록 - 1) web.xml  2) @webServlet 어노테이션\r\n");
      out.write("    	\r\n");
      out.write("    	doGet(){\r\n");
      out.write("    		부서정보를 ArrayList 저장\r\n");
      out.write("    		// 로직 처리\r\n");
      out.write("    		포워딩\r\n");
      out.write("    		\r\n");
      out.write("    		// 화면 출력\r\n");
      out.write("    		// ex06_dept.jsp\r\n");
      out.write("    	}\r\n");
      out.write("\r\n");
      out.write("    프로젝트 진행할 떄 모든 경로는 상대경로 X, /jspPro 컨텍스트 패스부터 경로 설정\r\n");
      out.write("    웹의 경로 구분자는 /\r\n");
      out.write("    요청 URL : /jspPro/scott/dept -> 서블릿 선언 url pattern = \"????\"\r\n");
      out.write("    3. ex06_dept.jsp 포워딩 부서정보 select 태그 출력\r\n");
      out.write("    \r\n");
      out.write("    4. ex06_dept.jsp -> select 태그에서 부서 선택\r\n");
      out.write("    5. ScottEmp.java 서블릿 호출\r\n");
      out.write("    	선택한 부서의 사원 정보 ArrayList 저장 후\r\n");
      out.write("    6. ex06_emp.jsp 포워딩시켜서 해당 부서원 정보를 출력 ..\r\n");
      out.write("    \r\n");
      out.write("    어떤 요청 url 						-> 	서블릿\r\n");
      out.write("    /jspPro/scott/dept 					url-pattern = \"\"\r\n");
      out.write("    /jspPro/board/write\r\n");
      out.write("</pre>\r\n");
      out.write("\r\n");

    String contextPath = request.getContextPath(); // /jspPro

      out.write("\r\n");
      out.write("\r\n");
      out.write("<a href=\"");
      out.print(contextPath);
      out.write("/scott/dept\">scott.dept(부서 정보)</a>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
