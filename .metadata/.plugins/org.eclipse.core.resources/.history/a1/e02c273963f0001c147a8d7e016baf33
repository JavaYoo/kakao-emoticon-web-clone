package days05.board;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class BoardDAOImpl implements BoardDAO{

   // 필드
   private Connection conn = null;
   private PreparedStatement pstmt = null;
   private ResultSet rs = null;

   // 생성자
   public BoardDAOImpl() {}
   // 1. 생성자를 통해서 의존성 주입( DI )
   public BoardDAOImpl( Connection conn ){
      this.conn = conn;
   }
   // 2. setter 를 통해서 의존성 주입( DI )
   public void setConn( Connection conn ) {
      this.conn = conn;
   }

   public Connection getConn() {
      return conn;
   }

   @Override
   public ArrayList<BoardDTO> select() throws SQLException {

      ArrayList<BoardDTO>  list = null;
      BoardDTO dto = null;

      int seq;
      String writer; 
      String email;
      String title;
      Date   writedate;
      int readed; 

      String sql =   "SELECT seq,  writer, email, title, readed , writedate "
            + "FROM tbl_cstvsboard "
            + "ORDER BY seq DESC";

      //System.out.println(  sql );

      this.pstmt = this.conn.prepareStatement(sql);
      this.rs  = this.pstmt.executeQuery();

      if( this.rs.next() ) {
         list = new ArrayList<BoardDTO>();
         do {

            seq = this.rs.getInt("seq");
            writer = this.rs.getString("writer");
            email = this.rs.getString("email");
            title = this.rs.getString("title");
            writedate = this.rs.getDate("writedate");
            readed = this.rs.getInt("readed");

            dto = new BoardDTO(seq, writer, email, title, writedate, readed);

            list.add(dto);
         } while ( this.rs.next() );
      } // if

      this.rs.close();
      this.pstmt.close();

      return list;
      
   } // select
   
   
	@Override
	public int insert(BoardDTO dto) throws SQLException {
		int rowCount = 0;
		
		String sql = "INSERT INTO tbl_cstvsboard (seq, writer, pwd, email, title, tag, content) "
				+ "VALUES (SEQ_TBL_CSTVSBOOARD.nextval, ?, ?, ?, ?, ?, ?)";
		
		this.pstmt = this.conn.prepareStatement(sql);
		//writer, pwd, email, title, tag, content
		//?, ?, ?, ?, ?, ?
		this.pstmt.setString(1, dto.getWriter());
		this.pstmt.setString(2, dto.getPwd());
		this.pstmt.setString(3, dto.getEmail());
		this.pstmt.setString(4, dto.getTitle());
		this.pstmt.setInt(5, dto.getTag());
		this.pstmt.setString(6, dto.getContent());
		
		rowCount = this.pstmt.executeUpdate(); // 자동 커밋
		
		
		return rowCount;
	}	

} // class